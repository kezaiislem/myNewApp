<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABxBgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAYrSURBVHja7dfNa1xVHMfhA7oQClqViJqcBFIxQl25FHcuBBU0mW6LaQrVhaQbtbpy
        VwpBkFJB2kw0qFSrRZq1Qv8Aob4hviFBm6YtKIjGVdLxd8NspU7pTM7c+3zhQ7Ync899MknJzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMxqvfzKUsrzx1M+8k7Kry5LKqEj76Z8+K2U3zjfZwBeOpXyi2/ekl9u3xYY
        SCqh6n2cP35rXviszwCcvpTyya+fyB9d/jyfuSqpiK6cz4vfHcwXOn0G4NM/U17+eS6f+6uTVzYkldL7
        q8fyD4MBYBYAUkn93cnvrR4FgAQAAEgAAIAEAABIAACABAAASAAAgAQAAEgAAIAEAABIAACABAAASAAA
        gAQAAEgAAIAEAABIAJAEAEkAkAQASQCQBABJAJAEAEkAkAQASQCQBABJAJAEAEkAkAQASQCQBABJAJC0
        IwDMAUAqqHPbABzL3/cbgA9+S/ntC4/l02tL+cP1QdfOZ66ejV/2nyF7OBtx7o+3zz/4z0yN6NJyPvVN
        K3/RZwBGOp10XzSyA+Wqs388GC/V+pAJfTF/8vtk3qHPTc3o3ujOTr+/ATx7KOWnZuPn8ylPvzDYqn8/
        VjaGE4CVjcnt8w/6M1Mzqt7Hpw+kvP+1VNvFSzTMAOypzm9mADAzAJgZAMwMAGYGADMDgJkBwMyaBcD4
        1MPSDTUWTUQAGH4AdkV7Cm9SxVQ9jxEA1AeAJ6Nfo7XoonSdLkcLowCoDQCt6FrUkf5nbQDUC4BNl1o9
        tAgAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgA
        AACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAA
        AAgAAACAAAAAAAgAACgcgK3u+VRG1TM5CYD6ADBTMADVy78QPdM9p3a+6g/GI2MAqA0A0wUDsNk9X1JZ
        +QYAgEEBsG+8rhfNAAAAABgAAAAAAwAAAGAAAAAADAAAAIABAAAAMAAAwAwAADADAADMAAAAMwAAwAwA
        ADADAADMAAAAMwAAwAwAADADAADMAAAAMwAAwAwAADADAADMAAAAAwAAAGAAAAAADAAAAIABAAAAMAAA
        AAAGAAAAwAAAAAAYAAAAAAMAAABgAAAAAAwAALgJALS651RB5Yf2ptrCDIBi2ooORfdE96uYdgOgPgC0
        Cgagaj36MfpJRfRLdHQ07s4EAACgRtYGAADU3BYBAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAAB
        AAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAA
        AAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEACaC8BMwQBsRSei/dFzKqID
        0aMAqA8A0wUDsNk9X1JZAQAAgwJg33hdL5oBAAAAMAAAAAAGAAAAwAAAAAAYAAAAAAMAAABgAACAGQAA
        YAYAAJgBAABmAACAGQAAYAYAAJgBAABmAACAGQAAYAYAAJgBAABmAACAGQAAYAYAAJgBAAAGAAAAwAAA
        AAAYAAAAAAMAAABgAAAAAAwAAACAAQAAADAAAAAABgAAAMAAAAAAGAAAcBMAaHXPqYLKU3vTRF1hBkAx
        bUWz0e3RXSqiu6NdYwCoDQAzBQNQtRp9GX2lIvo2en007g4A6gFAq3AAVF5LAACAmtsiAAAgAAAAAAIA
        AAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAA
        AAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAgAAAAAAIAAAAg
        APwnAFPRlSEDYO0GAbjmUquH2k0AYHd0MJofouaiO3oE4IFoPjpcaPMqquqZPN4EAIa6HgCQeq7WAJiZ
        mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZNWv/ApfNTLdZwVmNAAAAAElFTkSuQmCC
</value>
  </data>
</root>